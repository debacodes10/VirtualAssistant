import requests
import json
import webbrowser
import re
import urllib.request
import pyautogui
import datetime
import webbrowser
import speech_recognition as sr
from pygame import mixer
import time

def intentret(text):
    url = "http://127.0.0.1:5000/intent"
    
    text = text.replace(' ', '&')
    payload='text='+text
    headers = {
    'Content-Type': 'application/x-www-form-urlencoded'
    }
    response = requests.request("POST", url, headers=headers, data=payload)
    res = response.text
    intent = json.loads(res)
    return intent['intent']


def playsongyt(userinp):
    ch=userinp.index('y')
    sname=userinp[ch+2:len(userinp):1]
    sname=sname.replace(" ","+")
    sname=sname.lstrip('+')
    html=urllib.request.urlopen('https://www.youtube.com/results?search_query='+sname)
    video_ids = re.findall(r"watch\?v=(\S{11})", html.read().decode())
    webbrowser.open(("https://www.youtube.com/watch?v=" + video_ids[0]))
    
    
def changesongyt(userinp):
    ch=userinp.index('c')
    sname = userinp[ch+14::]
    sname=sname.replace(" ","+")
    sname=sname.lstrip('+')
    html=urllib.request.urlopen('https://www.youtube.com/results?search_query='+sname)
    video_ids = re.findall(r"watch\?v=(\S{11})", html.read().decode())
    pyautogui.hotkey('ctrl','w')
    webbrowser.open(("https://www.youtube.com/watch?v=" + video_ids[0]),new=0)
    

def dt(): 
    # using now() to get current time
    current_time = datetime.datetime.now()
    print("Date : ", current_time.day,"/",current_time.month,"/",current_time.year)
 
 
def tm():
    # using now() to get current time
    current_time = datetime.datetime.now()
    print("Time : ", current_time.hour,":",current_time.minute,":",current_time.second)
    

def google_search(MyText):
    ch = MyText.index("o")
    sname = MyText[ch+3::]
    sname=sname.replace(" ","+")
    sname=sname.lstrip('+')
    webbrowser.open('https://www.google.com/search?q='+sname)
    
    
def stt():
    
    r = sr.Recognizer()         # Initialize the recognizer
    while(True):   
        try:
            
            with sr.Microphone() as source2:            # use the microphone as source for input.
                
                # wait for a second to let the recognizer
                # adjust the energy threshold based on
                # the surrounding noise level
                r.adjust_for_ambient_noise(source2, duration=0.1)
                
                #listens for the user's input
                audio2 = r.listen(source2)
                
                # Using google to recognize audio
                MyText = r.recognize_google(audio2)
                MyText = MyText.lower()
    
                return(MyText)
                
        except sr.RequestError as e:
            print("Could not request results; {0}".format(e))
            
        except sr.UnknownValueError:
            print("unknown error occurred")
            

def timer(text):
    
    min=sec=0
    
    i1 = text.find('minutes')
    t1 = text[i1-3:i1+7]
    for i in t1:
        if i == '1' or i == '2' or i == '3' or i == '4' or i == '5' or i == '6' or i == '7' or i == '8' or i == '9' or i == '0':
            i = int(i)
            min = min*10+i 
    
    i2 = text.find('seconds')
    t2 = text[i2-3:i2+7:]
    for i in t2:
        if i == '1' or i == '2' or i == '3' or i == '4' or i == '5' or i == '6' or i == '7' or i == '8' or i == '9' or i == '0':
            i = int(i)
            sec = sec*10+i
    
    t = min*60+sec
    while t:
        mins, secs = divmod(t, 60)
        timer = '{:02d}:{:02d}'.format(mins, secs)
        print(timer, end="\r")
        time.sleep(1)
        t -= 1
      
    #play audio to imply timer up
    mixer.init()
    mixer.music.load("alarm.mp3")
    mixer.music.play()
    time.sleep(15)
    